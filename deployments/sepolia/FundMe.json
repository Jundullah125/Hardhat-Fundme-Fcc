{
    "address": "0x3C8b6250F6812a3b092E12465ec39876C29bdef3",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "s_priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwners",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0xb0b63a0bc10f1e599efad1a12abcacf2ad3f3495b79790caa9b036b8ccecc34b",
    "receipt": {
        "to": null,
        "from": "0x09133228bb768E28C531edDb7804310B2FdC8A45",
        "contractAddress": "0x3C8b6250F6812a3b092E12465ec39876C29bdef3",
        "transactionIndex": 61,
        "gasUsed": "1041796",
        "logsBloom": "0x
        "blockHash": "0xe34d770c820ba56a5e368ceb57640a8eb17f6d5f3673d47283029a4025e61f3b",
        "transactionHash": "0xb0b63a0bc10f1e599efad1a12abcacf2ad3f3495b79790caa9b036b8ccecc34b",
        "logs": [],
        "blockNumber": 5381939,
        "cumulativeGasUsed": "9554712",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x694AA1769357215DE4FAC081bf1f309aDC325306"],
    "numDeployments": 3,
    "solcInputHash": "12a3d605ae5e6785a83a052a7e913871",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Karayel Jundullah\",\"details\":\"This implements s_priceFeeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is a demo to sample contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//pragma\\npragma solidity ^0.8.8;\\n\\n//Import stateements\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Error code\\nerror FundMe__NotOwner();\\n\\n//Interfaces, Libraries, Contracts\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Karayel Jundullah\\n * @notice This contract is a demo to sample contract\\n * @dev This implements s_priceFeeds as our library\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    //State Variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    //Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        //MAPPINGS CAN'T BE IN MEMORY;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getOwners() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0xadb7f9a1140de84c80eb87e12100775fb7339d83442d5cdf7c298d19b32fd931\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n      \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa019b8c4ef193b5fd9f98f7b4a5c951493de1bfd626ffbdaa383d9155fbaf6f3\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012f8380380620012f8833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111796200017f6000396000818161038a01528181610603015261062901526111796000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610154578063a0e67e2b1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ab1565b6102f8565b6040516100cc9190610af7565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b3e565b610340565b6040516101099190610b7a565b60405180910390f35b34801561011e57600080fd5b50610127610388565b005b34801561013557600080fd5b5061013e6105c8565b60405161014b9190610af7565b60405180910390f35b34801561016057600080fd5b506101696105d5565b6040516101769190610bf4565b60405180910390f35b34801561018b57600080fd5b506101946105ff565b6040516101a19190610b7a565b60405180910390f35b6101b26101be565b005b6101bc610627565b005b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cb90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c6c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cbb565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061035657610355610d11565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b85760006001828154811061043357610432610d11565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610d40565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610d89565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b50600190805190602001906105189291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610de9565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610e4a565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561073057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e6575b5050505050905060005b81518110156107ba57600082828151811061075857610757610d11565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b290610d40565b91505061073a565b50600067ffffffffffffffff8111156107d6576107d5610d89565b5b6040519080825280602002602001820160405280156108045781602001602082028036833780820191505090505b506001908051906020019061081a9291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161084190610de9565b60006040518083038185875af1925050503d806000811461087e576040519150601f19603f3d011682016040523d82523d6000602084013e610883565b606091505b50509050806108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610e4a565b60405180910390fd5b5050565b6000806108d783610907565b90506000670de0b6b3a764000085836108f09190610e6a565b6108fa9190610ef3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095057600080fd5b505afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190610fb1565b5050509150506402540be4008161099f919061102c565b915050919050565b828054828255906000526020600020908101928215610a20579160200282015b82811115610a1f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c7565b5b509050610a2d9190610a31565b5090565b5b80821115610a4a576000816000905550600101610a32565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7e82610a53565b9050919050565b610a8e81610a73565b8114610a9957600080fd5b50565b600081359050610aab81610a85565b92915050565b600060208284031215610ac757610ac6610a4e565b5b6000610ad584828501610a9c565b91505092915050565b6000819050919050565b610af181610ade565b82525050565b6000602082019050610b0c6000830184610ae8565b92915050565b610b1b81610ade565b8114610b2657600080fd5b50565b600081359050610b3881610b12565b92915050565b600060208284031215610b5457610b53610a4e565b5b6000610b6284828501610b29565b91505092915050565b610b7481610a73565b82525050565b6000602082019050610b8f6000830184610b6b565b92915050565b6000819050919050565b6000610bba610bb5610bb084610a53565b610b95565b610a53565b9050919050565b6000610bcc82610b9f565b9050919050565b6000610bde82610bc1565b9050919050565b610bee81610bd3565b82525050565b6000602082019050610c096000830184610be5565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c56601b83610c0f565b9150610c6182610c20565b602082019050919050565b60006020820190508181036000830152610c8581610c49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc682610ade565b9150610cd183610ade565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0657610d05610c8c565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d4b82610ade565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d7e57610d7d610c8c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dd3600083610db8565b9150610dde82610dc3565b600082019050919050565b6000610df482610dc6565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e34600b83610c0f565b9150610e3f82610dfe565b602082019050919050565b60006020820190508181036000830152610e6381610e27565b9050919050565b6000610e7582610ade565b9150610e8083610ade565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eb957610eb8610c8c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610efe82610ade565b9150610f0983610ade565b925082610f1957610f18610ec4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4381610f24565b8114610f4e57600080fd5b50565b600081519050610f6081610f3a565b92915050565b6000819050919050565b610f7981610f66565b8114610f8457600080fd5b50565b600081519050610f9681610f70565b92915050565b600081519050610fab81610b12565b92915050565b600080600080600060a08688031215610fcd57610fcc610a4e565b5b6000610fdb88828901610f51565b9550506020610fec88828901610f87565b9450506040610ffd88828901610f9c565b935050606061100e88828901610f9c565b925050608061101f88828901610f51565b9150509295509295909350565b600061103782610f66565b915061104283610f66565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108157611080610c8c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110be576110bd610c8c565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110fb576110fa610c8c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561113857611137610c8c565b5b82820290509291505056fea26469706673582212201abb18ebe133bc16b84c24d106933026a11abf68ce1ad0f4824e3251c98ffdca64736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610154578063a0e67e2b1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ab1565b6102f8565b6040516100cc9190610af7565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b3e565b610340565b6040516101099190610b7a565b60405180910390f35b34801561011e57600080fd5b50610127610388565b005b34801561013557600080fd5b5061013e6105c8565b60405161014b9190610af7565b60405180910390f35b34801561016057600080fd5b506101696105d5565b6040516101769190610bf4565b60405180910390f35b34801561018b57600080fd5b506101946105ff565b6040516101a19190610b7a565b60405180910390f35b6101b26101be565b005b6101bc610627565b005b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cb90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c6c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cbb565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061035657610355610d11565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b85760006001828154811061043357610432610d11565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610d40565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610d89565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b50600190805190602001906105189291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610de9565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610e4a565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561073057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e6575b5050505050905060005b81518110156107ba57600082828151811061075857610757610d11565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b290610d40565b91505061073a565b50600067ffffffffffffffff8111156107d6576107d5610d89565b5b6040519080825280602002602001820160405280156108045781602001602082028036833780820191505090505b506001908051906020019061081a9291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161084190610de9565b60006040518083038185875af1925050503d806000811461087e576040519150601f19603f3d011682016040523d82523d6000602084013e610883565b606091505b50509050806108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610e4a565b60405180910390fd5b5050565b6000806108d783610907565b90506000670de0b6b3a764000085836108f09190610e6a565b6108fa9190610ef3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095057600080fd5b505afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190610fb1565b5050509150506402540be4008161099f919061102c565b915050919050565b828054828255906000526020600020908101928215610a20579160200282015b82811115610a1f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c7565b5b509050610a2d9190610a31565b5090565b5b80821115610a4a576000816000905550600101610a32565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7e82610a53565b9050919050565b610a8e81610a73565b8114610a9957600080fd5b50565b600081359050610aab81610a85565b92915050565b600060208284031215610ac757610ac6610a4e565b5b6000610ad584828501610a9c565b91505092915050565b6000819050919050565b610af181610ade565b82525050565b6000602082019050610b0c6000830184610ae8565b92915050565b610b1b81610ade565b8114610b2657600080fd5b50565b600081359050610b3881610b12565b92915050565b600060208284031215610b5457610b53610a4e565b5b6000610b6284828501610b29565b91505092915050565b610b7481610a73565b82525050565b6000602082019050610b8f6000830184610b6b565b92915050565b6000819050919050565b6000610bba610bb5610bb084610a53565b610b95565b610a53565b9050919050565b6000610bcc82610b9f565b9050919050565b6000610bde82610bc1565b9050919050565b610bee81610bd3565b82525050565b6000602082019050610c096000830184610be5565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c56601b83610c0f565b9150610c6182610c20565b602082019050919050565b60006020820190508181036000830152610c8581610c49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc682610ade565b9150610cd183610ade565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0657610d05610c8c565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d4b82610ade565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d7e57610d7d610c8c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dd3600083610db8565b9150610dde82610dc3565b600082019050919050565b6000610df482610dc6565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e34600b83610c0f565b9150610e3f82610dfe565b602082019050919050565b60006020820190508181036000830152610e6381610e27565b9050919050565b6000610e7582610ade565b9150610e8083610ade565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eb957610eb8610c8c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610efe82610ade565b9150610f0983610ade565b925082610f1957610f18610ec4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4381610f24565b8114610f4e57600080fd5b50565b600081519050610f6081610f3a565b92915050565b6000819050919050565b610f7981610f66565b8114610f8457600080fd5b50565b600081519050610f9681610f70565b92915050565b600081519050610fab81610b12565b92915050565b600080600080600060a08688031215610fcd57610fcc610a4e565b5b6000610fdb88828901610f51565b9550506020610fec88828901610f87565b9450506040610ffd88828901610f9c565b935050606061100e88828901610f9c565b925050608061101f88828901610f51565b9150509295509295909350565b600061103782610f66565b915061104283610f66565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108157611080610c8c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110be576110bd610c8c565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110fb576110fa610c8c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561113857611137610c8c565b5b82820290509291505056fea26469706673582212201abb18ebe133bc16b84c24d106933026a11abf68ce1ad0f4824e3251c98ffdca64736f6c63430008080033",
    "devdoc": {
        "author": "Karayel Jundullah",
        "details": "This implements s_priceFeeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "This contract is a demo to sample contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 58,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 61,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
